name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    paths-ignore:
      - database/**
      - package.json
      - package-lock.json
      - CHANGELOG.md
      - .conventional-changelog.mjs
      - .release-it.json

jobs:
  build-backend:
    runs-on: ubuntu-22.04
    timeout-minutes: 10

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.400'

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Setup Tools
        uses: ./.github/actions/setup-tools

      - name: Build backend
        run: |
          pwd
          dotnet build ./server/AdvSol.sln

      - name: Test backend
        run: dotnet test ./server/AdvSol.sln --no-build

      # SonarQube integration for backend
      # - name: SonarQube Scan Backend
      #   uses: sonarsource/sonarcloud-github-action@v2
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-frontend:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Angular CLI
        run: npm install -g @angular/cli

      - name: Install project dependencies
        run: npm install

      - name: Build frontend
        run: ng build --configuration=production

      - name: Run frontend tests
        run: ng test --watch=false --code-coverage=true

      - name: Create test results directory
        run: mkdir -p ./frontend/test-results

      - name: Copy test results
        run: cp -r ./coverage ./frontend/test-results

      # SonarQube integration for frontend
      # - name: SonarQube Scan Frontend
      #   uses: sonarsource/sonarcloud-github-action@v2
      #   env:
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
